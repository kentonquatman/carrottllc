/* ******************************************************************************
 *
 * Font Stacks
 *
 * We should set up our font stacks in the variables file. Then, when we want to
 * set our font on a selector we call the family, weight and style in the mixin.
 *
 ****************************************************************************** */

@mixin font($font-family: $body-font, $weight: 400, $style: normal) {
  font-family: $font-family;
  font-style: $style;
  font-weight: $weight;
}

/* ******************************************************************************
 *
 * Font Sizing
 *
 * Let's make it easy to use rem measuerments in our website for type sizes.
 *
 ****************************************************************************** */

@mixin font-size($pixels) {
  font-size: #{$pixels}px;
  font-size: #{$pixels/$base-size}rem;
}

/* ******************************************************************************
 *
 * Retina Images
 *
 * Smart delivery of 2x images for those cases where svg just won't work.
 * http://37signals.com/svn/posts/3271-easy-retina-ready-images-using-scss
 *
 ****************************************************************************** */

@mixin image-2x($sm-image, $lg-image) {
  background-image: url($sm-image);
  @media (-webkit-min-device-pixel-ratio: 1.3),
         (min-resolution: 124.8dpi) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($lg-image);
    background-size: image-width($sm-image) image-height($sm-image);
  }
}

/* ******************************************************************************
 *
 * Background Image Replacement
 *
 * Use this when you want to put a background-image on an element and hide the text.
 *
 ****************************************************************************** */

@mixin image-bg-replace($sm-image, $lg-image) {
  display: block;
  overflow: hidden;
  padding: 0;
  padding-top: image-height($sm-image);
  width: image-width($sm-image);
  height: 0;
  background-position: 0 0;
  background-repeat: no-repeat;
  @include image-2x($sm-image, $lg-image);
}

/* ******************************************************************************
 *
 * Break Points - Be sure to update the variables as appropriate.
 *
 ****************************************************************************** */

$small:    500;
$medium:   750;
$large:    1000;
$x-large:  1250;

@mixin break-up($point) {
  @media screen and (min-width: pem($point)) { @content; }
}

@mixin break-down($point) {
  @media screen and (max-width: pem($point - 1)) { @content; }
}

/* ******************************************************************************
 *
 * CSS Triangles - http://minimalmonkey.com/sass-triangle-mixin/
 *
 * @param width           :  px, em
 * @param height          :  px, em
 * @param direction       :  up, down, left, right
 * @param color           :  hex, rgb
 *
 ****************************************************************************** */

@mixin arrow($width: 20px, $height: 20px, $direction: up, $color: red) {
  width: 0;
  height: 0;
  @if $direction == right {
    border-top: $height/2 solid transparent;
    border-bottom: $height/2 solid transparent;
    border-left: $width solid $color;
  }
  @if $direction == left {
    border-top: $height/2 solid transparent;
    border-bottom: $height/2 solid transparent;
    border-right: $width solid $color;
  }
  @if $direction == up {
    border-left: $width/2 solid transparent;
    border-right: $width/2 solid transparent;
    border-bottom: $height solid $color;
  }
  @if $direction == down {
    border-left: $width/2 solid transparent;
    border-right: $width/2 solid transparent;
    border-top: $height solid $color;
  }
}


/* ******************************************************************************
 *
 * Text Utilities
 *
 * Easy addition of text-overflow ellipsis or word-wrap properties. Don't use,
 * @include ellipsis/word-wrap. Rather, use @extend %ellipsis/%word-wrap as this
 * will get all of the items using this on the same selector.
 *
 ****************************************************************************** */

@mixin ellipsis {
  overflow: hidden;
  white-space: nowrap;
  @include experimental(text-overflow, ellipsis, not -moz, not -webkit, -o, -ms, not -khtml, official);
}

@mixin word-wrap {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

/* ******************************************************************************
 *
 * CSS Animations
 *
 * Set up @include keyframes(name-of-keyframes) outside of a selector context.
 * This will allow us to use the keyframes in animation. Should do this early on
 * in the sass stack. Then we use the animation mixin in the selector we need to
 * animate, calling in the (name, duration, transition-direction, repeat, etc.)
 * See "Animation Mixin" here: http://css-tricks.com/custom-user-mixins/
 *
 ****************************************************************************** */

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content
  }
  @-moz-keyframes #{$name} {
    @content
  }
  @-ms-keyframes #{$name} {
    @content
  }
  @-o-keyframes #{$name} {
    @content
  }
  @keyframes #{$name} {
    @content
  }
}

@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}

/* ******************************************************************************
 *
 * Site specific mixins
 *
 * Every site is a beautiful and unique snowflake. Create your beautiful and
 * unique mixins here.
 *
 ****************************************************************************** */
